--- src-original/setup.py	2023-11-16 22:38:50.000000000 +0000
+++ src/setup.py	2023-12-08 19:35:37.717504000 +0000
@@ -64,7 +64,7 @@
 if "freebsd" in sys.platform:
     CARES_INCLUDE += (os.path.join("third_party", "cares", "config_freebsd"),)
 if "linux" in sys.platform:
-    CARES_INCLUDE += (os.path.join("third_party", "cares", "config_linux"),)
+    CARES_INCLUDE += (os.path.join("third_party", "cares", "config_android"),)  # Chaquopy
 if "openbsd" in sys.platform:
     CARES_INCLUDE += (os.path.join("third_party", "cares", "config_openbsd"),)
 RE2_INCLUDE = (os.path.join("third_party", "re2"),)
@@ -352,7 +353,10 @@
 
 EXTENSION_LIBRARIES = ()
 if "linux" in sys.platform:
-    EXTENSION_LIBRARIES += ("rt",)
+    EXTENSION_LIBRARIES += (
+        "log",  # Chaquopy: for __android_log_...
+        "dl",  # Chaquopy: for dlopen
+    )
 if not "win32" in sys.platform:
     EXTENSION_LIBRARIES += ("m",)
 if "win32" in sys.platform:
--- src-original/src/python/grpcio/_parallel_compile_patch.py	2023-11-16 22:38:51.000000000 +0000
+++ src/src/python/grpcio/_parallel_compile_patch.py	2023-12-08 18:58:29.306412400 +0000
@@ -60,9 +60,10 @@
     # run compilation of individual files in parallel
     import multiprocessing.pool
 
-    multiprocessing.pool.ThreadPool(BUILD_EXT_COMPILER_JOBS).map(
+    # Chaquopy: use imap_unordered for faster failure.
+    list(multiprocessing.pool.ThreadPool(BUILD_EXT_COMPILER_JOBS).imap_unordered(
         _compile_single_file, objects
-    )
+    ))
     return objects
 
 
--- src-original/third_party/cares/cares/src/lib/ares_init.c	2023-11-16 22:38:55.000000000 +0000
+++ src/third_party/cares/cares/src/lib/ares_init.c	2023-12-08 19:47:19.179698236 +0000
@@ -1577,14 +1577,14 @@
     channel->ednspsz = EDNSPACKETSZ;
 
   if (channel->nservers == -1) {
-    /* If nobody specified servers, try a local named. */
+    /* Chaquopy: default to the Google public DNS server. */
     channel->servers = ares_malloc(sizeof(struct server_state));
     if (!channel->servers) {
       rc = ARES_ENOMEM;
       goto error;
     }
     channel->servers[0].addr.family = AF_INET;
-    channel->servers[0].addr.addrV4.s_addr = htonl(INADDR_LOOPBACK);
+    channel->servers[0].addr.addrV4.s_addr = htonl(0x08080808);  /* Chaquopy: 8.8.8.8 */
     channel->servers[0].addr.udp_port = 0;
     channel->servers[0].addr.tcp_port = 0;
     channel->nservers = 1;
