# This file was generated by CMake because it detected TRY_RUN() commands
# in crosscompiling mode. It will be overwritten by the next CMake run.
# Copy it to a safe location, set the variables to appropriate values
# and use it then to preset the CMake cache (using -C).


# IEEE_BE_EXITCODE
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set IEEE_BE_EXITCODE to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN". arm64-v8a
# IEEE_BE_EXITCODE__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set IEEE_BE_EXITCODE__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The IEEE_BE_COMPILED variable holds the build result for this TRY_RUN().
# 
# Source file   : /home/ytrem/miniconda3/chaquopy-tremare_eccodes/server/pypi/packages/eccodes/build/2.30.0/py3-none-android_21_arm64_v8a/src/build/ecbuild/CMakeFiles/CMakeTmp/src.c
# Executable    : /home/ytrem/miniconda3/chaquopy-tremare_eccodes/server/pypi/packages/eccodes/build/2.30.0/py3-none-android_21_arm64_v8a/src/build/ecbuild/CMakeFiles/cmTC_48c95-IEEE_BE_EXITCODE
# Run arguments : 
#    Called from: [4]	/usr/share/cmake-3.22/Modules/Internal/CheckSourceRuns.cmake
#                 [3]	/usr/share/cmake-3.22/Modules/CheckCSourceRuns.cmake
#                 [2]	/home/ytrem/miniconda3/chaquopy-tremare_eccodes/server/pypi/packages/eccodes/build/2.30.0/py3-none-android_21_arm64_v8a/src/build/eccodes-2.30.0-Source/cmake/eccodes_test_endiness.cmake
#                 [1]	/home/ytrem/miniconda3/chaquopy-tremare_eccodes/server/pypi/packages/eccodes/build/2.30.0/py3-none-android_21_arm64_v8a/src/build/eccodes-2.30.0-Source/CMakeLists.txt

set( IEEE_BE_EXITCODE 
     "PLEASE_FILL_OUT-FAILED_TO_RUN"
     CACHE STRING "FAILED_TO_RUN" FORCE)

set( IEEE_BE_EXITCODE__TRYRUN_OUTPUT 
     ""
     CACHE STRING "" FORCE)


# IEEE_LE_EXITCODE
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set IEEE_LE_EXITCODE to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# IEEE_LE_EXITCODE__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set IEEE_LE_EXITCODE__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The IEEE_LE_COMPILED variable holds the build result for this TRY_RUN().
# 
# Source file   : /home/ytrem/miniconda3/chaquopy-tremare_eccodes/server/pypi/packages/eccodes/build/2.30.0/py3-none-android_21_arm64_v8a/src/build/ecbuild/CMakeFiles/CMakeTmp/src.c
# Executable    : /home/ytrem/miniconda3/chaquopy-tremare_eccodes/server/pypi/packages/eccodes/build/2.30.0/py3-none-android_21_arm64_v8a/src/build/ecbuild/CMakeFiles/cmTC_54be1-IEEE_LE_EXITCODE
# Run arguments : 
#    Called from: [4]	/usr/share/cmake-3.22/Modules/Internal/CheckSourceRuns.cmake
#                 [3]	/usr/share/cmake-3.22/Modules/CheckCSourceRuns.cmake
#                 [2]	/home/ytrem/miniconda3/chaquopy-tremare_eccodes/server/pypi/packages/eccodes/build/2.30.0/py3-none-android_21_arm64_v8a/src/build/eccodes-2.30.0-Source/cmake/eccodes_test_endiness.cmake
#                 [1]	/home/ytrem/miniconda3/chaquopy-tremare_eccodes/server/pypi/packages/eccodes/build/2.30.0/py3-none-android_21_arm64_v8a/src/build/eccodes-2.30.0-Source/CMakeLists.txt

set( IEEE_LE_EXITCODE 
     "PLEASE_FILL_OUT-FAILED_TO_RUN"
     CACHE STRING "FAILED_TO_RUN" FORCE)

set( IEEE_LE_EXITCODE__TRYRUN_OUTPUT 
     "PLEASE_FILL_OUT-NOTFOUND"
     CACHE STRING "" FORCE)

